/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package pl.edu.agh.pharmoptim.api;

import pl.edu.agh.pharmoptim.model.JobIdOrError;
import pl.edu.agh.pharmoptim.model.JobParams;
import pl.edu.agh.pharmoptim.model.JobResultsOrError;
import pl.edu.agh.pharmoptim.model.JobStatus;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@Api(value = "jobs", description = "the jobs API")
public interface JobsApi {

    @ApiOperation(value = "", nickname = "jobsPost", notes = "Schedule one or more jobs", response = JobIdOrError.class, responseContainer = "List", tags={ "job", })
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "Created one or more jobs", response = JobIdOrError.class, responseContainer = "List"),
            @ApiResponse(code = 422, message = "Invalid arguments") })
    @RequestMapping(value = "/jobs",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<List<JobIdOrError>> jobsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<JobParams> body);

    @ApiOperation(value = "", nickname = "jobsJobIdDelete", notes = "Cancel running job", tags={ "job", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Cancelled"),
        @ApiResponse(code = 404, message = "No such job"),
        @ApiResponse(code = 405, message = "Job is not running. Either finished or was cancelled.") })
    @RequestMapping(value = "/jobs/{jobId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> jobsJobIdDelete(@ApiParam(value = "",required=true) @PathVariable("jobId") Long jobId);


    @ApiOperation(value = "", nickname = "jobsJobIdsResultsGet", notes = "Job results", response = JobResultsOrError.class, responseContainer = "List", tags={ "job", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Results", response = JobResultsOrError.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "No such jobs") })
    @RequestMapping(value = "/jobs/{jobIds}/results",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<JobResultsOrError>> jobsJobIdsResultsGet(@ApiParam(value = "",required=true) @PathVariable("jobIds") List<Integer> jobIds);


    @ApiOperation(value = "", nickname = "jobsJobIdsStatusGet", notes = "Job status", response = JobStatus.class, responseContainer = "List", tags={ "job", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Status", response = JobStatus.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "No such jobs") })
    @RequestMapping(value = "/jobs/{jobIds}/status",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<JobStatus>> jobsJobIdsStatusGet(@ApiParam(value = "",required=true) @PathVariable("jobIds") List<Integer> jobIds);

}
